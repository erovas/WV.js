//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WV.Essential {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WV.Essential.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a const Name = &apos;FileSystem&apos;;
        ///const WV = window.wv;
        ///const New = WV.New;
        ///const NewAsync = WV.NewAsync;
        ///
        ///
        ///WV.NewFileSystem = NewFileSystem;
        ///WV.NewFileSystemAsync = NewFileSystemAsync;
        ///
        ///WV.New = (name, ...args) =&gt; {
        ///    if (name === Name)
        ///        return NewFileSystem();
        ///    
        ///    return New(name, ...args);
        ///}
        ///
        ///WV.NewAsync = async (name, ...args) =&gt; {
        ///    if (name === Name)
        ///        return NewFileSystemAsync();
        ///
        ///    return await NewAsync(name, ...args);
        ///}
        ///
        ///function NewFileSystem() {
        ///    return [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string FileSystemScript {
            get {
                return ResourceManager.GetString("FileSystemScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a const Name = &apos;Storage&apos;;
        ///const NameAsync = Name + &apos;Async&apos;;
        ///const WV = window.wv;
        ///const New = WV.New;
        ///const NewAsync = WV.NewAsync;
        ///const Recover = WV.Recover;
        ///const RecoverAsync = WV.RecoverAsync;
        ///let StorageObj = null;
        ///let StorageAsync = null;
        ///
        ///Object.defineProperty(WV, Name, {
        ///    get() {
        ///        TryCreate();
        ///        return StorageObj;
        ///    }
        ///});
        ///
        ///Object.defineProperty(WV, NameAsync, {
        ///    get() {
        ///        TryCreate();
        ///        return StorageAsync;
        ///    }
        ///});
        ///
        ///WV.New = (name, ...args) = [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string StorageScript {
            get {
                return ResourceManager.GetString("StorageScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a const Name = &apos;Window&apos;;
        ///const WV = window.wv;
        ///const New = WV.New;
        ///const NewAsync = WV.NewAsync;
        ///const Stringify = JSON.stringify;
        ///const Default = {
        ///    LocalServer: true,
        ///    Domain: null,
        ///    IndexPage: null,
        ///    ErrorPage: null,
        ///    EnableFramePlugins: false,
        ///    EnablePlugins: true,
        ///    State: &quot;Restore&quot;,
        ///    TaskBar: {
        ///        Visible: true,
        ///        Status: &quot;Normal&quot;,
        ///        Progress: 0
        ///    },
        ///    StartupLocation: &quot;CenterScreen&quot;,
        ///    Title: &quot;WV.js Demo&quot;,
        ///    Icon: null,
        ///    Topmost: f [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string WindowScript {
            get {
                return ResourceManager.GetString("WindowScript", resourceCulture);
            }
        }
    }
}
